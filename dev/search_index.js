var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = GLMMng","category":"page"},{"location":"#GLMMng","page":"Home","title":"GLMMng","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for GLMMng.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [GLMMng]","category":"page"},{"location":"#GLMMng.GHnorm-Tuple{Integer}","page":"Home","title":"GLMMng.GHnorm","text":"GHnorm(k::Int)\n\nReturn a k-vector of ze and ws for normalized Gauss-Hermite quadrature\n\nThe function values are stored (memoized) when first evaluated.  Subsequent evaluations for the same k have very low overhead.\n\n\n\n\n\n","category":"method"},{"location":"#GLMMng.GaussHermiteNormalized-Tuple{Integer}","page":"Home","title":"GLMMng.GaussHermiteNormalized","text":"GaussHermiteNormalized(k)\n\nReturns a MatrixTable of k rows and columns z, the abscissae, and w, the weights, of a kth order normalized Gauss-Hermite rule.\n\nThe rows are sorted by increasing value of w so the weighted sum adds the smallest magnitudes first.\n\n\n\n\n\n","category":"method"},{"location":"#GLMMng.evalGHQ!-Tuple{SingleScalar}","page":"Home","title":"GLMMng.evalGHQ!","text":"evalGHQ!(m::SingleScalar; n::Integer)\n\nEvaluate the m.ytbl.aGHQ using n'th-order normalized Gauss-Hermite Quadrature.\n\nAs a special case, n == 1 corresponds to Laplace's approximation and m.ytbl.aGHQ is zeros\n\n\n\n\n\n","category":"method"},{"location":"#GLMMng.pdeviance-Tuple{GLMMmod}","page":"Home","title":"GLMMng.pdeviance","text":"pdeviance(m::GLMMmod)\n\nReturn the penalized deviance.\n\nThe deviance is the StatsBase.deviance value for the model without random effects (i.e. as a GLM model) and the penalty is the squared length of the vector of modes of the spherical random effects.\n\n\n\n\n\n","category":"method"},{"location":"#GLMMng.updateytbl!-Union{Tuple{T}, Tuple{Tables.MatrixTable{Matrix{T}}, Union{BernoulliLogit, Type{BernoulliLogit}}}} where T<:AbstractFloat","page":"Home","title":"GLMMng.updateytbl!","text":"updateytbl!(tbl::MatrixTable, ::Union{BernoulliLogit,Type{BernoulliLogit})\n\nUpdate the μ, dev, rtwwt, wwresp columns in the ytbl (MatrixTable containing y)\n\n\n\n\n\n","category":"method"},{"location":"#GLMMng.updateβ!-Union{Tuple{Glm{DL}}, Tuple{DL}} where DL","page":"Home","title":"GLMMng.updateβ!","text":"updateβ!(m::Glm)\n\nUtility function that saves the current m.β in m.βcp and evaluates a new m.β via weighted least squares.\n\nAfter evaluating a new m.β, m.ytbl is updated\n\n\n\n\n\n","category":"method"}]
}
